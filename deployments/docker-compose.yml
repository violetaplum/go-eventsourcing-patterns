version: '3'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: eventstore
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d eventstore"]
      interval: 5s
      timeout: 5s
      retries: 5


  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller' # KRaft 모드 활성화, zookeeper 없이 실행 가능하게함
      KAFKA_NODE_ID: 1 # 노드 ID
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093' # 컨트롤러 쿼텀 설정

      # 리스너 관련 설정 -> broker
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
    
      # 클러스터 식별자
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A==' # 클러스터 식별을 위한 UUID
    ports:
      - "9092:9092"
    command: >
      sh -c '
        # Kafka 서버 시작
        /etc/confluent/docker/run &
      
        # Kafka가 완전히 시작될 때까지 대기
        MAX_TRIES=10
        TRIES=0
        while [ $TRIES -lt $MAX_TRIES ]; do
          kafka-topics --bootstrap-server kafka:9092 --list && break
          echo "Waiting for Kafka to be ready..."
          sleep 10
          TRIES=$((TRIES+1))
        done
      
        # 토픽 생성
        kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic account-events
        kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic audit-logs
      
        # 메인 프로세스 대기
        wait
      '


  app:
    build:
      context: ..
      dockerfile: deployments/app/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      DB_HOST: postgres
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: account-events
    ports:
      - "8080:8080"

